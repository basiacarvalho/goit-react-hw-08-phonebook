{"version":3,"file":"static/js/663.a306f0bc.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/contactform/ContactForm.module.css?3637","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/contactform/ContactForm.jsx","webpack://react-homework-template/./src/components/contactlistelement/ContactListElement.module.css?7298","components/contactlistelement/ContactListElement.jsx","webpack://react-homework-template/./src/components/contactlist/ContactList.module.css?a617","components/contactlist/ContactList.jsx","webpack://react-homework-template/./src/components/section/Section.module.css?cc42","components/section/Section.jsx","webpack://react-homework-template/./src/components/error/Error.module.css?96a2","components/error/Error.jsx","webpack://react-homework-template/./src/components/searchfilter/SearchFilter.module.css?06d0","components/searchfilter/SearchFilter.jsx","webpack://react-homework-template/./src/pages/contacts/Contacts.module.css?40b9","pages/contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__-VUSZ\",\"label\":\"ContactForm_label__oqguo\",\"nameDetail\":\"ContactForm_nameDetail__2oiw7\",\"button\":\"ContactForm_button__I5rcX\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactList;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContactList = createSelector(\n  [selectContacts, selectFilter],\n  (contactList, filter) => {\n    return contactList.filter(contact =>\n      contact.name.toUpperCase().includes(filter.toUpperCase())\n    );\n  }\n);\n","import css from './ContactForm.module.css';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = evt => {\n    const { value } = evt.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = evt => {\n    const { value } = evt.target;\n    setNumber(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const existingNames = contactList.map(contact =>\n      contact.name.toLowerCase()\n    );\n    if (existingNames.includes(name.toLowerCase())) {\n      alert(`${name} is already in contacts.`);\n      return;\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n    evt.currentTarget.reset();\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"userName\">\n        Name\n        <input\n          className={css.nameDetail}\n          id=\"userName\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n        ></input>\n      </label>\n      <label className={css.label} htmlFor=\"userName\">\n        Number\n        <input\n          className={css.nameDetail}\n          id=\"userName\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeNumber}\n        ></input>\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListElement_listItem__e+m+J\",\"button\":\"ContactListElement_button__UDgNG\"};","import css from './ContactListElement.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactListElement = ({ name, id, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <li className={css.listItem} key={id}>\n      {name}: {number}\n      <button className={css.button} type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListElement.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  deleteContact: PropTypes.func,\n  id: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__wxgvM\"};","import { ContactListElement } from 'components/contactlistelement/ContactListElement';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContactList } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const filteredContactList = useSelector(selectFilteredContactList);\n\n  return (\n    <div className={css.contacts}>\n      <ul className={css.contactList}>\n        {filteredContactList.map(({ name, id, number }) => (\n          <ContactListElement name={name} key={id} id={id} number={number} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array,\n  filter: PropTypes.string,\n  deleteOption: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__QOIcc\",\"container\":\"Section_container__Bel2b\",\"section\":\"Section_section__kylri\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <div className={css.section}>\n      <div className={css.container}>\n        <h3 className={css.title}>{title}</h3>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Error_backdrop__xuFcY\",\"container\":\"Error_container__XGPum\",\"text\":\"Error_text__xTbdp\"};","import css from './Error.module.css';\nimport { useSelector } from 'react-redux';\nimport { selectError } from 'redux/contacts/selectors';\n\nexport const Error = () => {\n  const error = useSelector(selectError);\n  return (\n    <div className={css.backdrop}>\n      <div className={css.container}>\n        <p className={css.text}>{error}</p>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm__label\":\"SearchFilter_searchForm__label__KQvZ-\",\"searchForm__nameDetail\":\"SearchFilter_searchForm__nameDetail__DGlH9\"};","import { setFilter } from 'redux/filter/filterSlice';\nimport css from './SearchFilter.module.css';\nimport { useDispatch } from 'react-redux';\n\nexport const SearchFilter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    const filter = evt.target.value;\n    dispatch(setFilter(filter));\n  };\n\n  return (\n    <label className={css.searchForm__label}>\n      Find contacts by name{' '}\n      <input\n        className={css.searchForm__nameDetail}\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilter}\n      ></input>\n    </label>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__+hGpO\"};","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/contactform/ContactForm';\nimport { ContactList } from 'components/contactlist/ContactList';\nimport { Section } from 'components/section/Section';\nimport { Loader } from 'components/loader/Loader';\nimport { Error } from 'components/error/Error';\nimport { SearchFilter } from 'components/searchfilter/SearchFilter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <SearchFilter />\n        {isLoading && <Loader />}\n        {error && <Error />}\n        {contactList.length > 0 && <ContactList />}\n      </Section>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","contactList","selectIsLoading","isLoading","selectError","error","selectFilteredContactList","filter","contact","toUpperCase","includes","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","className","css","onSubmit","evt","preventDefault","toLowerCase","alert","addContact","currentTarget","reset","htmlFor","id","type","pattern","title","required","onChange","target","ContactListElement","onClick","deleteContact","ContactList","filteredContactList","Section","children","SearchFilter","setFilter","useEffect","fetchContacts","Loader"],"sourceRoot":""}